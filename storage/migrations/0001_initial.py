# Generated by Django 5.1.5 on 2025-01-22 23:10

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='заголовок')),
            ],
            options={
                'verbose_name': 'Заголовок',
                'verbose_name_plural': 'Заголовки',
            },
        ),
        migrations.CreateModel(
            name='Box',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=99, unique=True)),
                ('box_type', models.CharField(choices=[('маленький до 3м', 'Маленький до 3м'), ('стандартный от 3м до 10м', 'Стандартный от 3м до 10м'), ('большой от 10м', 'Большой от 10м')], max_length=30)),
                ('status', models.CharField(choices=[('свободен', 'Свободен'), ('занят', 'Занят')], default='свободен', max_length=20)),
                ('price_per_month', models.DecimalField(decimal_places=2, help_text='Цена в месяц в рублях', max_digits=10)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Бокс',
                'verbose_name_plural': 'Боксы',
            },
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=200, verbose_name='вопрос')),
                ('answer', models.TextField(verbose_name='ответ')),
            ],
            options={
                'verbose_name': 'Текст',
                'verbose_name_plural': 'Тексты',
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=100, unique=True)),
                ('total_area', models.FloatField(help_text='Общая площадь склада в квадратных метрах')),
                ('number_of_boxes', models.PositiveIntegerField(default=0)),
                ('description', models.TextField(blank=True, null=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Склад',
                'verbose_name_plural': 'Склады',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_storage', models.DateTimeField(verbose_name='начало хранения')),
                ('end_storage', models.DateTimeField(verbose_name='конец хранения')),
                ('date', models.DateField(auto_now_add=True)),
                ('address', models.TextField(blank=True, null=True, verbose_name='адрес')),
                ('price', models.PositiveIntegerField(blank=True, null=True, verbose_name='цена')),
                ('state', models.CharField(choices=[('todo', 'принять в работу'), ('true', 'подтвержден'), ('topay', 'выставить счет'), ('false', 'отменен')], default='todo', max_length=9, verbose_name='состояние')),
                ('box', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='storage.box')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
            },
        ),
    ]
